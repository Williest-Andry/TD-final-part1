# openapi: 3.0.3
# info:
#   title: STD23080 - TD
#   version: 1.0.0
# servers:
#   - url: https://localhost.std23080.com
# paths:
#   /customers:
#     get:
#       tags:
#         - Customer
#       description: Returns list of all customers
#       parameters:
#         - name: page
#           in: query
#           required: true
#           schema: 
#             type: integer
#       responses:
#         '200':
#           description: list of all customers
#           content:
#             application/json:
#               schema:
#                 type: array
#                 items:
#                   $ref: '#/components/schemas/customer'
#     post:
#       tags:
#         - Customer
#       description: Add a list of customers
#       requestBody:
#         description: customers to add
#         content:
#           application/json:
#             schema:
#               type: array
#               items:
#                 $ref: '#/components/schemas/addedCustomer'
#         required: true
#       responses:
#         '200':
#           description: list of all customers added
#           content:
#             application/json:
#               schema:
#                 type: array
#                 items:
#                   $ref: '#/components/schemas/customer'
#     put:
#       tags:
#         - Customer
#       description: Modify customer properties
#       requestBody:
#         description: customer properties to add
#         content:
#           application/json:
#             schema:
#               type: array
#               items:
#                 $ref: '#/components/schemas/customer'
#         required: true        
#       responses:
#         '200':
#           description : list of modified customers
#           content:
#             application/json:
#               schema:
#                 type: array
#                 items: 
#                   $ref: '#/components/schemas/customer'
#     delete:
#       tags:
#         - Customer
#       description: delete some customers
#       requestBody:
#         description: customer id to delete
#         content:
#           application/json:
#             schema:
#               type: array
#               items: 
#                 $ref: '#/components/schemas/customerWithIdOnly'
#         required: true        
#       responses:
#         '200':
#           description: alkjsdfl
#           content:
#             application/json:
#               schema:
#                 type: array
#                 items: 
#                   $ref : '#/components/schemas/customer'
#     patch:
#       tags:
#         - Customer
#       description: modify one customer property 
#       requestBody:
#         description: customer property to modify
#         content:
#           application/json:
#             schema:
#               type: array
#               items:
#                 $ref: '#/components/schemas/customer'
#       responses:
#         '200':
#           description: list of modified customers
#           content:
#             application/json:
#               schema:
#                 type: array
#                 items: 
#                   $ref: '#/components/schemas/customer'
#   /meals:
#     get:
#       description: Returns list of all meals
#       parameters:
#         - name: page
#           in: query
#           required: false
#           schema: 
#             type: integer
#       responses:
#         '200':
#           description: list of all meals
#           content:
#             application/json:
#               schema:
#                 type: array
#                 items:
#                   $ref: '#/components/schemas/meal'
#     post:
#       description: Add a list of meals
#       requestBody:
#         description: meal to add
#         content:
#           application/json:
#             schema:
#               type: array
#               items:
#                 $ref: '#/components/schemas/addedMeal'
#         required: true
#       responses:
#         '200':
#           description: list of all meals added
#           content:
#             application/json:
#               schema:
#                 type: array
#                 items:
#                   $ref: '#/components/schemas/meal'
#     put:
#       description: Modify meal properties
#       requestBody:
#         description: meal properties to add
#         content:
#           application/json:
#             schema:
#               type: array
#               items:
#                 $ref: '#/components/schemas/meal'
#         required: true        
#       responses:
#         '200':
#           description : list of modified meals
#           content:
#             application/json:
#               schema:
#                 type: array
#                 items: 
#                   $ref: '#/components/schemas/meal'
#     delete:
#       description: delete some meals
#       requestBody:
#         description: meal id to delete
#         content:
#           application/json:
#             schema:
#               type: array
#               items: 
#                 $ref: '#/components/schemas/mealWithIdOnly'
#         required: true        
#       responses:
#         '200':
#           description: list of all meals deleted
#           content:
#             application/json:
#               schema:
#                 type: array
#                 items: 
#                   $ref : '#/components/schemas/meal'
#     patch:
#       description: modify one meal property 
#       requestBody:
#         description: meal property to modify
#         content:
#           application/json:
#             schema:
#               type: array
#               items:
#                 $ref: '#/components/schemas/meal'  
#       responses:
#         '200':
#           description: list of all meals modified
#           content:
#             application/json:
#               schema:
#                 type: array
#                 items:
#                   $ref: '#/components/schemas/meal'
#   /customer/{customerId}/orders:
#     get:
#       description : list of one customer orders 
#       parameters:
#         - name: customerId
#           in: path
#           required: true
#           schema:
#             type: string
#       responses:
#         '200':
#           description: list of all customer orders
#           content:
#             application/json:
#               schema:
#                 type: array
#                 items: 
#                   $ref: '#/components/schemas/order'
#     post:
#       description: add order of one customer
#       parameters:
#         - name: customerId
#           in: path
#           required: true
#           schema:
#             type: string
#       requestBody: 
#         description: order to add
#         content:
#           application/json:
#             schema:
#               type: array
#               items: 
#                 $ref: '#/components/schemas/addedOrder'
#         required: true        
#       responses:
#         '200':
#           description: list of added orders
#           content:
#             application/json:
#               schema:
#                 type: array
#                 items:
#                   $ref: '#/components/schemas/order'
# components:
#   schemas:
#     customer:
#       allOf:
#         - $ref: '#/components/schemas/customerWithIdOnly'
#         - $ref: '#/components/schemas/addedCustomer'
#     addedCustomer:
#       type: object
#       properties:
#         name:
#           type: string
#         yearsOld:
#           type: integer
#     customerWithIdOnly:
#       type: object
#       properties:
#         id:
#           type: string
#     meal:
#       allOf: 
#         - $ref: '#/components/schemas/mealWithIdOnly'
#         - $ref: '#/components/schemas/addedMeal'
        
#     addedMeal:
#       type: object
#       properties:
#         name:
#           type: string
#         price: 
#           type: number
#           format: float
#     mealWithIdOnly:
#       type: object
#       properties:
#         id: 
#           type: string
#     order:
#       type: object
#       properties:
#         reference:
#           type: string
#         allOf:
#           $ref: '#/components/schemas/addedOrder'
#     addedOrder:
#       type: object
#       properties:
#         meals:
#           type: array
#           items : 
#             $ref: '#/components/schemas/meal'
#         orderDateTime:  
#           type: string
#           format: date-time
      
          
openapi: 3.0.3
info: 
  title: TD final P1 - STD23080
  version: 1.0.0
servers: 
  - url: https://localhost.std23080.com
paths:
  /competition:
    get:
      tags:
        - competition
      description: return list of competitions
      responses:
        '200':
          description: list of competitions
          content: 
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/competition'
  /team:
    get:
      tags:
        - team
      description: return list of teams
      parameters:
        - name: page
          in: query
          required: true
          schema: 
            type: integer
        - name: pageSize
          in: query
          required: true
          schema: 
            type: integer    
      responses:
        '200':
          description: list of teams
          content: 
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/team'
    post:
      tags:
        - team
      description: add list of teams
      requestBody:
        description: team to add 
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/teamToAdd'
      responses:
        '200':
          description: teams added 
          content: 
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/team'  
  /associationTeamAndCompetition:
    post:
      tags:
        - team
      description: add list of teams to an competition
      requestBody:
        description: teams to add 
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/associationTeamAndCompetition'
      responses:
        '200':
          description: teams added to an competition
          content: 
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/associationTeamAndCompetition'
  /player:
    get:
      tags:
        - player
      description: return list of players
      parameters:
        - name: page
          in: query
          required: true
          schema: 
            type: integer
        - name: pageSize
          in: query
          required: true
          schema: 
            type: integer 
      responses:
        '200':
          description: list of players
          content: 
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/player'
    post:
      tags:
        - player
      description: add list of players
      requestBody:
        description: player to add 
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/player'
      responses:
        '200':
          description: players added 
          content: 
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/player' 
  
  /playerTransfer:
    post:
      tags:
        - player
      description: add list of players in one team
      requestBody:
        description: players to add in one team
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/playerTransfer'
      responses:
        '200':
          description: players added to the team
          content: 
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/playerTransfer'
components:
  schemas:
    competition:
      type: object
      properties:
        name: 
          type: string
        country:
          type: string
    team:
      type: object
      properties:
        allOf:
          $ref: '#/components/schemas/teamToAdd' 
        competitionsList:
          type: array
          items: 
            $ref: '#/components/schemas/competition'
        playersList: 
          type: array
          items: 
            $ref: '#/components/schemas/player'
    teamToAdd:
      type: object
      properties:
        name:
          type: string
        tagLine:
          type: string
    associationTeamAndCompetition:
      type: object
      properties:
        team: 
          allOf:
           - $ref: '#/components/schemas/team'
        competition:
          allOf:
           - $ref: '#/components/schemas/competition'
    player:
      type: object
      properties:
        name: 
          type: string
        number:
          type: integer
        strongFoot:
          type: string
    playerTransfer:
      type: object
      properties:
        player:
          allOf:
            - $ref: '#/components/schemas/player'
        team:
          allOf:
            - $ref: '#/components/schemas/team'